apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-app
  namespace: default
  labels:
    app: chat-app
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: chat-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: chat-app
    spec:
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: dockerhub-secret
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
        - name: chat-app
          image: khsaleh889/familymicroservices:$IMAGE
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: chat-app-config
                  key: NAMESPACE
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: chat-app-config
                  key: ENVIRONMENT
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: chat-app-config
                  key: LOG_LEVEL
            - name: HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: chat-app-config
                  key: HOSTNAME
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: chat-app-config
                  key: PORT
            - name: EUREKA_HOST
              valueFrom:
                configMapKeyRef:
                  name: chat-app-config
                  key: EUREKA_HOST
            - name: EUREKA_PORT
              valueFrom:
                configMapKeyRef:
                  name: chat-app-config
                  key: EUREKA_PORT
            - name: SERVICE_NAME
              valueFrom:
                secretKeyRef:
                  name: chat-app-secret
                  key: SERVICE_NAME
          startupProbe:
            tcpSocket:
              port: 3000
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 60
          readinessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          livenessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"