---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ app.name }}-deployment"
  namespace: "{{ app.namespace | default('default') }}"
  labels:
    app: "{{ app.name }}"
spec:
  replicas: "{{ app.replicas | default(1) }}"
  selector:
    matchLabels:
      app: "{{ app.name }}"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: "{{ app.name }}"
    spec:
      imagePullSecrets:
        - name: dockerhub-secret
      containers:
        - name: "{{ app.name }}"
          image: "khsaleh889/familymicroservices:{{ app.image_tag }}"
          imagePullPolicy: "{{ app.image_pull_policy | default(default_image_pull_policy) }}"
          ports:
            - containerPort: 80
          envFrom:
            - configMapRef:
                name: "{{ app.name }}-config"
            - secretRef:
                name: "{{ app.name }}-secret"
          resources:
            requests:
              cpu: "{{ (app.resources.requests.cpu | default(default_resources.requests.cpu)) }}"
              memory: "{{ (app.resources.requests.memory | default(default_resources.requests.memory)) }}"
            limits:
              cpu: "{{ (app.resources.limits.cpu | default(default_resources.limits.cpu)) }}"
              memory: "{{ (app.resources.limits.memory | default(default_resources.limits.memory)) }}"
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 200
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 3
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 1
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
